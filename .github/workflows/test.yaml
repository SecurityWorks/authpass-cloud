name: test backend
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    container: postgres
    # 'google/dart-runtime:2.9-dev'
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: authpass
          POSTGRES_PASSWORD: blubb
          POSTGRES_DB: authpass
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - run: apt-get update && apt-get install -y git unzip
    - uses: actions/checkout@v2
      with:
        submodules: true
    # - name: create build number
    #   id: buildnumber
    #   env:
    #     GIT_AUTHOR_NAME: 'Github Action CI'
    #     GIT_AUTHOR_EMAIL: 'herbert.github.ci@codeux.design'
    #     GIT_COMMITTER_NAME: 'Github Action CI'
    #     GIT_COMMITTER_EMAIL: 'herbert.github.ci@codeux.design'
    #   run: |
    #     buildnumber=$(curl -s https://raw.githubusercontent.com/hpoul/git-buildnumber/v1.0/git-buildnumber.sh | bash /dev/stdin generate)
    #     echo "::set-output name=buildnumber::$buildnumber"
    - uses: cedx/setup-dart@v2
      with:
            architecture: x64
            release-channel: dev
            version: 2.9.0-3.0.dev
    - run: cd packages/authpass_cloud_backend && dart pub get && dart run --enable-asserts bin/authpass_backend.dart setupdb
      env:
        DBCONFIG: '{"host": "postgres"}'
    - run: cd packages/authpass_cloud_backend && dart test
      env:
        DBCONFIG: '{"host": "postgres"}'
    - run: mkdir schema && pg_dump -h postgres  -s authpass -Uauthpass > schema/schema.sql
      env:
        PGPASSWORD: blubb
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: track-schema
        publish_dir: ./schema
